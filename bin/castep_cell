#!/bin/bash

set -e

color='\033[1\0;31m'
endcolor='\033[0m'

## test usage is correct
function usage {
    echo 1>&2
    echo 1>&2 "Usage: $(basename $0) <seed>"
    echo 1>&2
    echo 1>&2 "Example:"
    echo 1>&2 "$(basename $0) LiCoO2"
    echo 1>&2 "$(basename $0) auto"
    echo 1>&2
    exit 1
}

if [ $# -ne 1 ]; then
    usage
fi

## set the input variables 

seed=$1

if [[ $seed == "auto" ]]; then
    if ! ls *.cell &>/dev/null; then
        echo 1>&2 "*.cell files not found"
        exit 1
    else
        ncell=$(ls *.cell | wc -l)
        [[ $ncell -gt 1 ]] && echo 1>&2 "too many *.cell files detected ..." && ls *.cell && exit 1
        [[ $ncell -eq 1 ]] && seed=`ls *.cell | awk 'BEGIN {FS=".cell"} {print $1}'`
    fi
fi

## checks before proceeding

rm -f $seed.cell.temp

dos2unix $seed.cell 1> /dev/null 2>&1

# backup

md5=`md5sum $seed.cell | cut -c 1-8`
cp $seed.cell $seed.cell.$md5

## main

echo -e $color
echo -e "Cleaning $seed.cell file ..."
echo -e $endcolor

echo "check $seed.cell file"
echo "----------------------------------------------------------------------"
sed    -e '/^%BLOCK LATTICE/             , /^%ENDBLOCK LATTICE/             d' \
       -e '/^%BLOCK POSITIONS/           , /^%ENDBLOCK POSITIONS/           d' \
       -e '/^%BLOCK KPOINT/              , /^%ENDBLOCK KPOINT/              d' \
       -e '/^%BLOCK SYMMETRY/            , /^%ENDBLOCK SYMMETRY/            d' \
       -e '/^#/                                                             d' \
       -e '/^%BLOCK CELL_CONSTRAINTS/    , /^%ENDBLOCK CELL_CONSTRAINTS/    d' \
       -e '/^FIX/                                                           d' \
       -e '/^%BLOCK IONIC_CONSTRAINTS/   , /^%ENDBLOCK IONIC_CONSTRAINTS/   d' \
       -e '/^%BLOCK EXTERNAL_EFIELD/     , /^%ENDBLOCK EXTERNAL_EFIELD/     d' \
       -e '/^%BLOCK EXTERNAL_PRESSURE/   , /^%ENDBLOCK EXTERNAL_PRESSURE/   d' \
       -e '/^%BLOCK SPECIES_MASS/        , /^%ENDBLOCK SPECIES_MASS/        d' \
       -e '/^%BLOCK SPECIES_POT/         , /^%ENDBLOCK SPECIES_POT/         d' \
       -e '/^%BLOCK SPECIES_LCAO_STATES/ , /^%ENDBLOCK SPECIES_LCAO_STATES/ d' \
       -e '/^%BLOCK HUBBARD_U/           , /^%ENDBLOCK HUBBARD_U/           d' \
       -e '/^QUANTIZATION_AXIS/                                             d' \
       -e '/\s*/                                                            d' \
       $seed.cell
echo "----------------------------------------------------------------------"

echo
echo "generate new cell file"
echo
(
    sed -n -e '/^%BLOCK LATTICE/             , /^%ENDBLOCK LATTICE/             p' $seed.cell; echo;
    sed -n -e '/^%BLOCK POSITIONS/           , /^%ENDBLOCK POSITIONS/           p' $seed.cell; echo; 
    echo "KPOINTS_MP_SPACING 0.05"; echo;
    echo "SYMMETRY_GENERATE"; echo "SNAP_TO_SYMMETRY"; echo;
    sed -n -e '/^FIX/                                                           p' $seed.cell; echo;
    sed -n -e '/^%BLOCK IONIC_CONSTRAINTS/   , /^%ENDBLOCK IONIC_CONSTRAINTS/   p' $seed.cell; echo;
    sed -n -e '/^%BLOCK EXTERNAL_EFIELD/     , /^%ENDBLOCK EXTERNAL_EFIELD/     p' $seed.cell; echo;
    sed -n -e '/^%BLOCK EXTERNAL_PRESSURE/   , /^%ENDBLOCK EXTERNAL_PRESSURE/   p' $seed.cell; echo;
    echo "%BLOCK SPECIES_POT"; echo "C19"; echo "%ENDBLOCK SPECIES_POT"; echo;
) >> $seed.cell.temp

echo "simplify Hubbard_U block"
(
    echo ""
    echo "%BLOCK HUBBARD_U"
    sed -n -e '/^%BLOCK HUBBARD_U/, /^%ENDBLOCK HUBBARD_U/p' $seed.cell  | sed '/%/,/%/!d;//d' | awk '{printf "    %s %s %.2f\n", $1, $3, $4}' | uniq
    echo "%ENDBLOCK HUBBARD_U"
    echo ""
) >> $seed.cell.temp


mv $seed.cell.temp $seed.cell
cat $seed.cell

exit 0
