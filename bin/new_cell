#!/bin/bash
#################################################################################
# Script to perform a full, self consistent, geometry optimisation using Castep #
#################################################################################

set -e

#########################
# Test usage is correct #
#########################

if [ $# -ne 1 ]; then
         echo 1>&2 "Usage: new_cell <seed>"
         exit 127
fi

###########################
# Set the input variables #
###########################

seed=$1

#############
# Functions #
#############


####################

function new_cell ()
{

    sed -n -e '/^%BLOCK [Ll][Aa][Tt]*/, /^%ENDBLOCK [Pp][Oo][Ss]*/p' $seed-out.cell | grep -v -i FIX_VOL | sed -e '/^%BLOCK [Cc][Ee][Ll]*/, /^%ENDBLOCK [Cc][Ee][Ll]*/d' > $seed-out.cell.temp;
    sed -e '/ANG/d' $seed-out.cell.temp > $seed.cell.temp;
    sed -e '/^%BLOCK [Ll][Aa][Tt]*/, /^%ENDBLOCK [Pp][Oo][Ss]*/d' $seed.cell >> $seed.cell.temp;
    mv $seed.cell.temp $seed.cell;
    rm $seed-out.cell.temp;
    
    # If we are doing a spin polarised calculation, store the spins calculated by Mulliken analysis

    if [[ `grep "SPIN=" $seed.cell | wc -l` -gt 0 ]]; then

	nlines=`sed -n '/[pP][oO][sS][iI][tT][iI][oO][nN][sS]/{=; q;}' $seed.cell`
	printf "\n" > $seed.spin
	for (( j = 2 ; j <= $nlines; j++ ))
	do
	    printf "\n" >> $seed.spin
	done
	
	nions=`grep "Total number of ions in cell =" $seed.castep | tail -1 | awk '{print $8}'`

	sed -n '/Total  Charge (e)  Spin (hbar\/2)/,/Spin       Length (A)/p' $seed.castep | sed '/==/,/==/!d;//d' | awk '{print "SPIN=",$9}'| tail -$nions >> $seed.spin
	sed -n '/Total  Charge(e)   Spin(hbar\/2)/,/Spin       Length (A)/p' $seed.castep | sed '/==/,/==/!d;//d' | grep -v dn | awk '{print "SPIN=",$10}'| tail -$nions >> $seed.spin
	sed -n '/Total   Charge(e)   Spin(hbar\/2)/,/Spin       Length (A)/p' $seed.castep | sed '/==/,/==/!d;//d' | grep -v dn | awk '{print "SPIN=",$10}'| tail -$nions >> $seed.spin
	
	awk 'BEGIN { FS="SPIN=" };{print $1}' $seed.cell | paste - $seed.spin | expand > $seed.cell.temp
	
	mv $seed.cell.temp $seed.cell
	rm $seed.spin
	
    fi
    
    # Ensure that the spin in the cell and param are consistent

    if [[ `grep SPIN= $seed.cell | wc -l` -gt 0 ]]; then
	grep -v -i "spin " $seed.param > $seed.param.temp
	echo "spin : " `grep SPIN= $seed.cell| awk 'BEGIN {FS="SPIN="};{ sum += $2 } END {print sum}'` >> $seed.param.temp
	mv $seed.param.temp $seed.param
    fi

	
    return;
}

############
# Optimise #
############

	new_cell
